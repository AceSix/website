@use 'sass:color';
@use 'sass:math';

@import 'base.scss';

* {
  -webkit-font-smoothing: subpixel-antialiased;

  box-sizing: border-box;

  margin: 0;
  padding: 0;

  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;

  scroll-margin-top: $main-padding-top;
}

html {
  -webkit-text-size-adjust: none;
  text-size-adjust: none;

  background-color: $html-background-color;
}

body {
  height: 100vh;
  width: 100vw;
  // Attempt at fixing iOS Safari
  @supports (-webkit-touch-callout: none) {
    height: -webkit-fill-available;
  }

  background-position: center;
  background-size: $background-dot-spacing $background-dot-spacing;
  background-image: radial-gradient(
    circle,
    $background-dot-color $background-dot-size,
    rgba(0, 0, 0, 0) $background-dot-size
  );

  @include body-text;
}

#root {
  position: fixed;
  inset: 0;

  padding-top: $nav-bar-height;

  overflow-y: scroll;
  scroll-behavior: smooth;
}

#nav-bar {
  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  right: 0;

  height: $nav-bar-height;

  background-color: $nav-bar-background-color;
  border-bottom: 1px solid $nav-bar-border-color;

  box-shadow: $nav-bar-box-shadow;

  #nav-bar-inner {
    display: grid;
    place-content: stretch flex-end;
    grid-template: 'logo nav-items' minmax(0, 1fr) / min-content minmax(0, 1fr);

    margin: 0 auto;
    padding: 0 20px;

    height: 100%;
    width: 100%;
    max-width: $page-max-width;
  }

  #nav-items {
    display: flex;
    flex-direction: row;
    align-items: stretch;
    justify-content: flex-end;
  }

  .nav-item {
    @include anchor-text($header-color);

    font-family: $header-font-family;
    font-size: $nav-bar-font-size;
    font-weight: $nav-bar-font-weight;
    line-height: $header-line-height;
    color: $header-color;

    display: grid;
    place-items: center;

    padding-top: 6px;
    padding-left: 8px;
    padding-right: 8px;

    white-space: nowrap;

    &:hover {
      background-color: $nav-bar-hover-background-color;
    }
  }
}

#logo {
  $buffer-top-value: 16;
  $buffer-top: $buffer-top-value * 1px;

  z-index: 1000;

  position: relative;
  top: -$buffer-top;
  left: _linear($middle-value, 0, $high-value, -32);

  height: _linear($middle-value, $nav-bar-height-value + $buffer-top-value, $high-value, 80);
  width: _linear($middle-value, 100, $high-value, 120);

  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2), 0 0 16px 0 rgba(0, 0, 0, 0.2);

  display: grid;
  grid-template-columns: repeat(5, minmax(0, 1fr));

  font-family: $logo-font-family;
  font-size: _linear($middle-value, 32, $high-value, 36);
  font-weight: 400;
  line-height: $nav-bar-height;

  color: white;

  @mixin logo-char($background-color, $character) {
    position: relative;
    overflow: hidden;
    background-color: $background-color;

    &::before,
    &::after {
      content: $character;
      position: absolute;
      inset: $buffer-top + 2px 0 0;
      text-align: center;
      transition: transform ease 0.4s;
    }
    &::after {
      transform: translateY(-100%);
    }

    &:hover {
      &::before {
        transition: transform ease 0s;
        transform: translateY(100%);
      }
      &::after {
        transition: transform ease 0s;
        transform: translateY(0);
      }
    }
  }

  > #a {
    @include logo-char(hsl(355, (54 * 1.1) * 1%, 57%), 'C');
  }
  > #b {
    @include logo-char(hsl(24, (64 * 1.1) * 1%, 58%), 'S');
  }
  > #c {
    @include logo-char(hsl(51, (65 * 1.1) * 1%, 56%), '1');
  }
  > #d {
    @include logo-char(hsl(89, (45 * 1.1) * 1%, 46%), '2');
  }
  > #e {
    @include logo-char(hsl(181, (47 * 1.1) * 1%, 39%), '3');
  }
}

#page {
  margin: $page-margin;
  padding: $page-padding;

  min-height: 100%;
  max-width: $page-max-width;

  background-color: $page-background-color;
  border-left: 1px solid $page-border-color;
  border-right: 1px solid $page-border-color;

  display: grid;
  grid-template:
    'toc divider main' minmax(0, 1fr)
    / minmax(0, 2fr) min-content minmax(0, 7fr);

  &::before {
    content: ' ';
    height: 100%;
    width: 1px;
    display: grid;
    border-left: 1px solid $page-divider-color;
    grid-area: divider;
  }
}

.toc {
  position: sticky;
  top: $main-padding-top;

  margin: $main-padding;

  align-self: flex-start;

  ol {
    cursor: pointer;
    list-style: none;
  }

  @mixin toc-level($level) {
    font-size: $toc-font-size;
    font-weight: $toc-font-weight;
    line-height: $body-font-size * $body-line-height;
    color: $toc-color;

    position: relative;

    @if ($level != 1) {
      left: ($level - 2) * 8px;
      border-left: 1px solid $toc-edge-color;
    }
  }
  @mixin toc-item($level) {
    position: relative;
    left: -($level - 2) * 8px;
    margin-left: -1px;
  }
  @mixin toc-link($level) {
    @include anchor-text($toc-color);

    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;

    padding-right: 4px;
    white-space: nowrap;

    &::before {
      content: ' ';
      display: inline-block;
      height: 100%;
      width: ($level - 1) * 8px;
    }
  }

  @for $i from 1 through 6 {
    .toc-level-#{$i} {
      @include toc-level($i);
    }
    .toc-item-h#{$i} {
      @include toc-item($i);
    }
    .toc-link-h#{$i} {
      @include toc-link($i);
    }
  }
}

main {
  padding: $main-padding;
  padding-left: $page-divider-spacing;

  background-color: $main-background-color;

  > * {
    margin-bottom: $main-inner-spacing-vert;
  }

  > h1,
  > h2,
  > h3,
  > h4,
  > h5,
  > h6 {
    margin-top: ($main-inner-spacing-vert * 2);
    margin-bottom: $main-inner-spacing-vert;
  }

  > h1 {
    @include header-text($h1-font-size, $h1-font-weight);
    margin-top: 0;
  }

  > h2 {
    @include header-text($h2-font-size, $h2-font-weight);
  }

  > h3 {
    @include header-text($h3-font-size, $h3-font-weight);
  }

  > h4 {
    @include header-text($h4-font-size, $h4-font-weight);
  }

  > h5 {
    @include header-text($h5-font-size, $h5-font-weight);
  }

  > h6 {
    @include header-text($h6-font-size, $h6-font-weight);
  }

  > p {
    @include body-text;
  }

  ol,
  ul {
    padding-left: $list-padding-left;
  }
  li {
    padding-left: $list-item-padding-left;
  }
}

// ================== Hide Table of Contents

@media only screen and (max-width: $breakpoint) {
  #page {
    grid-template: 'main' minmax(0, 1fr) / minmax(0, 1fr);

    &::before {
      content: unset;
    }
  }

  .toc {
    display: none;
  }

  main {
    padding-left: $main-padding-left;
  }
}

#page.hide-toc {
  .toc {
    visibility: hidden;
  }

  main {
    grid-area: main;
  }
}
